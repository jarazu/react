{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Razu\\\\Desktop\\\\React\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport { link } from 'fs';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 2,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n    _this.styles = {\n      fontSize: 50,\n      fontWeight: \"bold\" // constructor(){\n      //     super();\n      //     this.handleIncrement=this.handleIncrement.bind(this);\n      // }\n\n    };\n\n    _this.handleIncrement = function () {\n      console.log('Increment Clicked');\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, tag);\n      })));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? 'Zero' : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\Razu\\Desktop\\React\\counter-app\\src\\components\\counter.jsx"],"names":["React","Component","link","Counter","state","count","tags","styles","fontSize","fontWeight","handleIncrement","console","log","getBadgeClasses","formatCount","map","tag","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,IAArB;;IAEOC,O;;;;;;;;;;;;;;;;;UACHC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAFD,K;UAIRC,M,GAAS;AACLC,MAAAA,QAAQ,EAAC,EADJ;AAELC,MAAAA,UAAU,EAAC,MAFN,CAKT;AACA;AACA;AACA;;AARS,K;;UASTC,e,GAAiB,YAAK;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,K;;;;;;;6BACQ;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKJ,eAAtB;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWE,IAAX,CAAgBS,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eAAE;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CAAF;AAAA,OAAvB,CADL,CAHJ,CADA;AASH;;;sCAEiB;AACd,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAK,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,aAAOY,OAAP;AACH;;;kCAEY;AAAA,UACHZ,KADG,GACI,KAAKD,KADT,CACHC,KADG;AAET,aAAOA,KAAK,KAAG,CAAR,GAAU,MAAV,GAAiBA,KAAxB;AACH;;;;EAtCkBJ,S;;AAyCvB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { link } from 'fs';\r\n\r\nclass  Counter extends Component {\r\n    state = {\r\n        count: 2,\r\n        tags:['tag1','tag2','tag3']\r\n    };\r\n    styles = {\r\n        fontSize:50,\r\n        fontWeight:\"bold\"\r\n    }\r\n\r\n    // constructor(){\r\n    //     super();\r\n    //     this.handleIncrement=this.handleIncrement.bind(this);\r\n    // }\r\n    handleIncrement =() =>{\r\n        console.log('Increment Clicked');\r\n    }\r\n    render() { \r\n        return (\r\n        <div>\r\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n            <ul>\r\n                {this.state.tags.map(tag=><li key={tag}>{tag}</li>)}\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const{count}=this.state;\r\n        return count===0?'Zero':count;\r\n    }\r\n}\r\n \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}